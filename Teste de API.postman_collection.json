{
	"info": {
		"_postman_id": "1def76c9-42d2-4c45-94de-109b65157be5",
		"name": "Teste de API",
		"description": "# About this collection\n\nThis collection helps you set up contract tests to ensure that two separate systems are compatible and can communicate with one another.\n\n## **Using the collection**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n### Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)\n\n[  \n](https://postman.postman.co/documentation/24552533-5bead607-0197-4e1d-87d4-3160bc7631c1?entity=&branch=&version=)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28417410",
		"_collection_link": "https://www.postman.com/osguriqa/workspace/testeqajr/collection/28417410-1def76c9-42d2-4c45-94de-109b65157be5?action=share&source=collection_link&creator=28417410"
	},
	"item": [
		{
			"name": "Home Route",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8400/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8400",
					"path": [
						""
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "User Routes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200 Users\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8400/api/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8400",
					"path": [
						"api",
						"user"
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "Get User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar usuario por ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"34\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/user/34",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"user",
						"34"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"Mria Eduarda\",\r\n\t\"e-mail\": \"maria.1999@gmail.com\",\r\n\t\"companies\": [\r\n\t\t\"Compliance Station\"\r\n\t]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/user/create",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mria Eduarda\",\r\n    \"e-mail\": \"maria.1999@gmail.com\",\r\n    \"companies\": [\r\n        \"Compliance Station\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/user/33/update",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"user",
						"33",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar mensagem\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"data deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mria Eduarda\",\r\n    \"e-mail\": \"maria.1999@gmail.com\",\r\n    \"companies\": [\r\n        \"Compliance Station\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/user/34/delete",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"user",
						"34",
						"delete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Companies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 list of companies\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/company",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"company"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Company by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar Empresa por ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/company/1",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"company",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"QA Jr\",\r\n\t\"cnpj\": \"991836547558\",\r\n\t\"adress\": {\r\n\t\t\"cep\": \"94960-250\",\r\n\t\t\"country\": \"Brasil\",\r\n\t\t\"city\": \"Cachoeirinha\",\r\n\t\t\"street_location\": \"ipanema\",\r\n\t\t\"number\": \"335\",\r\n\t\t\"district\": \"Vista Alegre\"\r\n\t}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/company/create",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"company",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"Testing QA\",\r\n\t\"cnpj\": \"787878945685\",\r\n\t\"adress\": {\r\n\t\t\"cep\": \"94945-250\",\r\n\t\t\"country\": \"Brasil\",\r\n\t\t\"state\": \"RS\",\r\n\t\t\"city\": \"Cachoeirinha\",\r\n\t\t\"street\": \"ipanema\",\r\n\t\t\"number\": \"442\",\r\n\t\t\"district\": \"Vista Alegre\"\r\n\t}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/company/4/update",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"company",
						"4",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar mensagem\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"data deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/company/5/delete",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"company",
						"5",
						"delete"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8400/"
		}
	]
}